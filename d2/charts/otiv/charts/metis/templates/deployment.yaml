apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "base.resource.name" . }}
  labels:
    app.kubernetes.io/name: {{ include "metis.name" . }}
    helm.sh/chart: {{ include "metis.chart" . }}
    app.kubernetes.io/instance: {{ include "base.resource.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "base.resource.name" . }}
      app.kubernetes.io/name: {{ include "metis.name" . }}
      app.kubernetes.io/instance: {{ include "base.resource.name" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include "config.secret.checksum" . }}
      labels:
        app: {{ include "base.resource.name" . }}
        app.kubernetes.io/name: {{ include "metis.name" . }}
        app.kubernetes.io/instance: {{ include "base.resource.name" . }}
        {{- include "otiv.custom.labels" . }}
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
    {{- if (include "is.ocp" .) }}
      serviceAccountName: {{ default "cvt-viewer" .Values.global.ocpServiceAccount }}
    {{- end }}
    {{- if and (not .Values.global.usingServiceMesh) (include "is.iv" .) }}
      serviceAccountName: otiv-asecret-sa
      initContainers:
      {{ template "init.otds.container" . }}
    {{- end }}
    {{- if .Values.global.usingServiceMesh }}
      initContainers:
      - name: wait
        image: {{ include "otds.init.image.path" . }}
        imagePullPolicy: {{ include "image.pull.policy" . }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
          runAsGroup: 1000
        command: [ "sh" ]
      {{- if .Release.IsInstall }}
        args: [ "-c", "sleep 200" ]
      {{- else }}
        args: [ "-c", "sleep 30" ]
      {{- end }}
    {{- end }}
      containers:
        - name: {{ include "base.resource.name" . }}
          image: {{ include "image.source.path" . }}
          imagePullPolicy: {{ include "image.pull.policy" . }}
          securityContext:
            allowPrivilegeEscalation: false
        {{- if .Values.resources.enabled }}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
        {{- end }}
          ports:
          - name: http
            containerPort: {{ .Values.service.targetPort }}
            protocol: TCP
          env:
          {{ include "env.secrets" . }}
          envFrom:
          - configMapRef:
              name: {{ include "base.resource.name" . }}-configmap
          {{- if .Values.command }}
          command: {{ .Values.command }}
          {{- end }}
    {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecret }}
    {{- end }}
